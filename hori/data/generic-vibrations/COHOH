(dp0
S'path'
p1
S'/a/suncatfs1/u1/montoyjh/vib_COHOH'
p2
sS'remark'
p3
NsS'vibrations'
p4
cnumpy.core.multiarray
_reconstruct
p5
(cnumpy
ndarray
p6
(I0
tp7
S'b'
p8
tp9
Rp10
(I1
(I15
tp11
cnumpy
dtype
p12
(S'c16'
p13
I0
I1
tp14
Rp15
(I3
S'<'
p16
NNNI-1
I-1
I0
tp17
bI00
S"\x00\x00\x00\x00\x00\x00\x00\x00\xf8rj\xdb\x83\x05~?\xa3\xf0\xc8Z\x08\x84\x8c?\x00\x00\x00\x00\x00\x00\x00\x00\xb6\xd7f\x98\xcf\xe5\x91?\x00\x00\x00\x00\x00\x00\x00\x00\x0e\xea\x0b\x7f\xc2'\x99?\x00\x00\x00\x00\x00\x00\x00\x005\xfd\x04\x0e\x93\x86\x9d?\x00\x00\x00\x00\x00\x00\x00\x00q\xa2A\x8bE\xc9\xa2?\x00\x00\x00\x00\x00\x00\x00\x00\xf9-\xf5\xdfw\xdd\xa8?\x00\x00\x00\x00\x00\x00\x00\x00\xed\x9bG\xa4\xe5z\xb1?\x00\x00\x00\x00\x00\x00\x00\x00\x13;+ec'\xb4?\x00\x00\x00\x00\x00\x00\x00\x00\xf01\xdb\xd4\x9aP\xc0?\x00\x00\x00\x00\x00\x00\x00\x00\x97\x81\xda2\xf3\x9a\xc1?\x00\x00\x00\x00\x00\x00\x00\x00\x18T\x06\xcc}<\xc4?\x00\x00\x00\x00\x00\x00\x00\x00\x07\xa6\xd8x\xf2%\xc5?\x00\x00\x00\x00\x00\x00\x00\x00\xaa\xbe\x0c\x04\x0b\xa7\xdb?\x00\x00\x00\x00\x00\x00\x00\x00g\x9b'\x01\x9b\xe8\xdb?\x00\x00\x00\x00\x00\x00\x00\x00"
p18
tp19
bsS'calculation script'
p20
S'#!/usr/bin/env python\n\n#PBS -q verylong\n#PBS -r n\n#PBS -l nodes=1:ppn=8\n#PBS -m a\n#PBS -M andypeterson@gmail.com\n#PBS -V\n\nfrom ase import *\nfrom ase.calculators.jacapo import Jacapo\nfrom ase.vibrations import Vibrations\n\n\nname = "Cu_HOCOH"\nvibrateatoms = [27,28,29,30,31]\n\n# Open the optimized slab with adsorbate from an old simulation.\n\nslab = read(\n \'/home/camp/anpet/20091016_Cu_adsorptions/HOCOH/runs/I/qn.traj\')\n\ncalc = Jacapo(nc=name + \'.nc\', #nc output file\n                 pw=340.15, #planewave cutoff\n                 dw=500.00, #density cutoff\n                 nbands=None, # number of bands\n                 kpts=(4,4,1), # k points\n                 xc=\'RPBE\', #exchange correlation method\n                 ft=0.1, #Fermi temperature\n                 symmetry=True,\n                 dipole=True,\n                 spinpol=False,\n                 stay_alive=True\n                )\ncalc.set_convergence()\ncalc.set_dipole(status=True, mixpar=0.2, initval=0.0)\ncalc.set_psp(sym=\'Pb\',psp=\'/home/camp/anpet/common/uspp/pb_ps.uspp\')\n\nslab.set_calculator(calc)\n\ne_adsorbed = slab.get_potential_energy()\nprint e_adsorbed\n\nf = open(name + \'.energy\',\'w\')\nf.write(str(e_adsorbed))\nf.close()\n\n\n# Calculate vibrations\nvib = Vibrations(slab,indices=vibrateatoms)\nvib.run()\nvib.summary(method=\'standard\')\n\n# Make trajectory files to visualize the modes.\nfor mode in range(len(vibrateatoms)*3):\n    vib.write_mode(mode)\n\n\n'
p21
sS'author'
p22
S'JHM'
p23
s.