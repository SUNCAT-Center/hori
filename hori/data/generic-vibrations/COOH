(dp0
S'path'
p1
S'/home/camp/anpet/20091105_adsorbate_vibrations/kpts-441/COOH/Cu'
p2
sS'remark'
p3
NsS'vibrations'
p4
cnumpy.core.multiarray
_reconstruct
p5
(cnumpy
ndarray
p6
(I0
tp7
S'b'
p8
tp9
Rp10
(I1
(I12
tp11
cnumpy
dtype
p12
(S'c16'
p13
I0
I1
tp14
Rp15
(I3
S'<'
p16
NNNI-1
I-1
I0
tp17
bI00
S'\xf0\x06y\x8c5\x15\x8a?\x00\x00\x00\x00\x00\x00\x00\x00\xe6+\xde\x84\xfcg\x92?\x00\x00\x00\x00\x00\x00\x00\x00\x10\xd2\xe8\xc6\xbc$\x93?\x00\x00\x00\x00\x00\x00\x00\x00j\xab\xf5\x8avS\x99?\x00\x00\x00\x00\x00\x00\x00\x00H*\x14t\x18T\xa1?\x00\x00\x00\x00\x00\x00\x00\x00j\xa2\x96\xae\xee\x99\xa7?\x00\x00\x00\x00\x00\x00\x00\x00m\x04\x96\xf9\x1e\xf7\xb4?\x00\x00\x00\x00\x00\x00\x00\x00r\x1e\x0f\xec\xb8\xa9\xb5?\x00\x00\x00\x00\x00\x00\x00\x00\x06oK\x8b\xea\x90\xc1?\x00\x00\x00\x00\x00\x00\x00\x00\x08)\xe7\x17\x12\x0c\xc4?\x00\x00\x00\x00\x00\x00\x00\x00\xa8\x9ad\x0e\\\x0f\xc8?\x00\x00\x00\x00\x00\x00\x00\x00\xb4\x0c\xabl\x7f\x85\xdc?\x00\x00\x00\x00\x00\x00\x00\x00'
p18
tp19
bsS'calculation script'
p20
S'#!/usr/bin/env python\n\n#PBS -q verylong\n#PBS -r n\n#PBS -l nodes=1:ppn=8\n#PBS -m a\n#PBS -M andypeterson@gmail.com\n#PBS -V\n\nfrom ase import *\nfrom ase.calculators.jacapo import Jacapo\nfrom ase.vibrations import Vibrations\n\n\nname = "Cu_COOH"\nvibrateatoms = [27,28,29,30]\n\n# Open the optimized slab with adsorbate from an old simulation.\n\nslab = read(\n \'/home/camp/anpet/20091016_Cu_adsorptions/COOH/runs/C/qn.traj\')\n\ncalc = Jacapo(nc=name + \'.nc\', #nc output file\n                 pw=340.15, #planewave cutoff\n                 dw=500.00, #density cutoff\n                 nbands=None, # number of bands\n                 kpts=(4,4,1), # k points\n                 xc=\'RPBE\', #exchange correlation method\n                 ft=0.1, #Fermi temperature\n                 symmetry=True,\n                 dipole=True,\n                 spinpol=False,\n                 stay_alive=True\n                )\ncalc.set_convergence()\ncalc.set_dipole(status=True, mixpar=0.2, initval=0.0)\ncalc.set_psp(sym=\'Pb\',psp=\'/home/camp/anpet/common/uspp/pb_ps.uspp\')\n\nslab.set_calculator(calc)\n\ne_adsorbed = slab.get_potential_energy()\nprint e_adsorbed\n\nf = open(name + \'.energy\',\'w\')\nf.write(str(e_adsorbed))\nf.close()\n\n\n# Calculate vibrations\nvib = Vibrations(slab,indices=vibrateatoms)\nvib.run()\nvib.summary(method=\'standard\')\n\n# Make trajectory files to visualize the modes.\nfor mode in range(len(vibrateatoms)*3):\n    vib.write_mode(mode)\n\n\n'
p21
sS'author'
p22
S'AAP'
p23
s.