(dp0
S'path'
p1
S'/home/camp/anpet/20091105_adsorbate_vibrations/kpts-441/OCHCH2/Cu'
p2
sS'remark'
p3
NsS'vibrations'
p4
cnumpy.core.multiarray
_reconstruct
p5
(cnumpy
ndarray
p6
(I0
tp7
S'b'
p8
tp9
Rp10
(I1
(I18
tp11
cnumpy
dtype
p12
(S'c16'
p13
I0
I1
tp14
Rp15
(I3
S'<'
p16
NNNI-1
I-1
I0
tp17
bI00
S'\x00\x00\x00\x00\x00\x00\x00\x00n\xf7\x12f\xc8Wm?\xc1\x89E\x1e\xd2+\x83?\x00\x00\x00\x00\x00\x00\x00\x00\xeb\x1d+4\xaa\xbc\x8e?\x00\x00\x00\x00\x00\x00\x00\x002*l\xeb&2\x99?\x00\x00\x00\x00\x00\x00\x00\x00\x1dm\x01\xe9M\x89\xa2?\x00\x00\x00\x00\x00\x00\x00\x00\x1d\x86Y\x0e\xee\x88\xa4?\x00\x00\x00\x00\x00\x00\x00\x00S\xbf\xd8\x96#}\xb0?\x00\x00\x00\x00\x00\x00\x00\x00,_\xe7- o\xb7?\x00\x00\x00\x00\x00\x00\x00\x00\x81\x17(\x9b\xba.\xbb?\x00\x00\x00\x00\x00\x00\x00\x00+-T`3\xc1\xbe?\x00\x00\x00\x00\x00\x00\x00\x00r\xe5\xa8~\xcc\x94\xbf?\x00\x00\x00\x00\x00\x00\x00\x00jJ\x9fU\xdf\xe9\xc2?\x00\x00\x00\x00\x00\x00\x00\x00\\ouk\x1db\xc5?\x00\x00\x00\x00\x00\x00\x00\x00\x19\xd8\x07\xac\x00~\xc6?\x00\x00\x00\x00\x00\x00\x00\x00\xeb\xf2\x05~\x10\xe1\xc7?\x00\x00\x00\x00\x00\x00\x00\x00\xd1\xb59J\x13e\xd7?\x00\x00\x00\x00\x00\x00\x00\x00\x16Is\xcb\tV\xd8?\x00\x00\x00\x00\x00\x00\x00\x00\xdcN\xf3\xdf\x97\x1d\xd9?\x00\x00\x00\x00\x00\x00\x00\x00'
p18
tp19
bsS'calculation script'
p20
S'#!/usr/bin/env python\n\n#PBS -q verylong\n#PBS -r n\n#PBS -l nodes=1:ppn=8\n#PBS -m a\n#PBS -M andypeterson@gmail.com\n#PBS -V\n\nimport pickle\nfrom ase import *\nfrom ase.calculators.jacapo import Jacapo\nfrom ase.vibrations import Vibrations\n\n\nname = "Cu_OCHCH2"\nvibrateatoms = [27,28,29,30,31,32]\n\n# Open the optimized slab with adsorbate from an old simulation.\n\nslab = read(\n \'/home/camp/anpet/20091016_Cu_adsorptions/OCHCH2/runs/G/qn.traj\')\n\ncalc = Jacapo(nc=name + \'.nc\', #nc output file\n                 pw=340.15, #planewave cutoff\n                 dw=500.00, #density cutoff\n                 nbands=None, # number of bands\n                 kpts=(4,4,1), # k points\n                 xc=\'RPBE\', #exchange correlation method\n                 ft=0.1, #Fermi temperature\n                 symmetry=True,\n                 dipole=True,\n                 spinpol=False,\n                 stay_alive=True\n                )\ncalc.set_convergence()\ncalc.set_dipole(status=True, mixpar=0.2, initval=0.0)\ncalc.set_psp(sym=\'Pb\',psp=\'/home/camp/anpet/common/uspp/pb_ps.uspp\')\n\nslab.set_calculator(calc)\n\ne_adsorbed = slab.get_potential_energy()\nprint e_adsorbed\n\nf = open(name + \'.energy\',\'w\')\nf.write(str(e_adsorbed))\nf.close()\n\n\n# Calculate vibrations\nvib = Vibrations(slab,indices=vibrateatoms)\nvib.run()\nvib.summary(method=\'standard\')\n\n# Make trajectory files to visualize the modes.\nfor mode in range(len(vibrateatoms)*3):\n    vib.write_mode(mode)\n\n# Write modes as pickles\nfor modenumber in range(len(vib.get_frequencies())):\n    mode = vib.get_mode(modenumber)\n    f = open(\'mode\' + str(modenumber) + \'.pckl\',\'w\')\n    pickle.dump(mode,f)\n    f.close()\n\n\n'
p21
sS'author'
p22
S'AAP'
p23
s.