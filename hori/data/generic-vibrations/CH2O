(dp0
S'path'
p1
S'/home/camp/anpet/20091105_adsorbate_vibrations/kpts-441/imaginary/CH2O/Cu/energyalongmode0/newoptimum/energyalongmode0/newoptimum/energyalongmode0/newoptimum'
p2
sS'remark'
p3
NsS'vibrations'
p4
cnumpy.core.multiarray
_reconstruct
p5
(cnumpy
ndarray
p6
(I0
tp7
S'b'
p8
tp9
Rp10
(I1
(I12
tp11
cnumpy
dtype
p12
(S'c16'
p13
I0
I1
tp14
Rp15
(I3
S'<'
p16
NNNI-1
I-1
I0
tp17
bI00
S"\xa9\xae0\x13\xe7\xb2x?\x00\x00\x00\x00\x00\x00\x00\x00\x95\xfd\x88\xc1E)\x89?\x00\x00\x00\x00\x00\x00\x00\x00\x80h\x94\xcb\xe4\xd0\x91?\x00\x00\x00\x00\x00\x00\x00\x006D\x81\xbcR)\x9b?\x00\x00\x00\x00\x00\x00\x00\x00\xb3\xf2=\xc5$g\xa4?\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xea\x8c\xa5l\x96\xb0?\x00\x00\x00\x00\x00\x00\x00\x00Z\x8eH\rZ\x8f\xbc?\x00\x00\x00\x00\x00\x00\x00\x00\xe6S(Y\xbe\x91\xc2?\x00\x00\x00\x00\x00\x00\x00\x00!\xd8\n'\x80\xb6\xc4?\x00\x00\x00\x00\x00\x00\x00\x00X\x16p\xe1I\xb2\xc7?\x00\x00\x00\x00\x00\x00\x00\x00\xd7o\x81\x1di\x86\xd7?\x00\x00\x00\x00\x00\x00\x00\x00\xfb\\RG\xd52\xd8?\x00\x00\x00\x00\x00\x00\x00\x00"
p18
tp19
bsS'calculation script'
p20
S'#!/usr/bin/env python\n#PBS -q verylong\n#PBS -r n\n#PBS -l nodes=1:ppn=8\n#PBS -m a\n#PBS -M andypeterson@gmail.com\n#PBS -V\n\n"""Calculates the energy change along mode0, to get a potential energy\ncurve."""\n\nimport pickle\nfrom numpy import array\nfrom ase import *\nfrom ase.calculators.jacapo import Jacapo\nfrom ase.vibrations import Vibrations\nfrom personal.ase import ParOpenCloseFile\n\n# The multiple of the mode to translate along\n#multiplier = -.5\n\n# The free atoms in the vibrational analysis\nvibrateatoms = [0,1,2,3]\n\n# Load the mode0 from the pickle file\n#f = open(\'mode0.pckl\',\'r\')\n#mode0 = pickle.load(f)\n#f.close\n\n# The output text file\nout = ParOpenCloseFile(\'results.txt\')\n\n# Load the geometry\natoms = read(\'../easierontheeyes/cleaned.traj\')\ncalc = Jacapo(nc=\'out.nc\', #nc output file\n              pw=340.15, #planewave cutoff\n              dw=500.00, #density cutoff\n              nbands=None, # number of bands\n              kpts=(4,4,1), # k points\n              xc=\'RPBE\', #exchange correlation method\n              ft=0.1, #Fermi temperature\n              symmetry=True,\n              dipole=True,\n              spinpol=False,\n              stay_alive=True\n             )\ncalc.set_convergence()\ncalc.set_dipole(status=True, mixpar=0.2, initval=0.0)\ncalc.set_psp(sym=\'Pb\',psp=\'/home/camp/anpet/common/uspp/pb_ps.uspp\')\n\n#calc.set_convergence(energy=0.0001)\natoms.set_calculator(calc)\n\np = atoms.positions.copy()\n\n# Get the energy in the original position\nE0 = atoms.get_potential_energy()\n#out.write(\'Original optimized energy: \' + \'%10.8f\'%E0 + \' eV\\n\')\n\n# Move the atoms to the optimized location found in the vibrational\n# analysis.\n\n#atoms.set_positions(p + multiplier * mode0)\nE1 = atoms.get_potential_energy()\nout.write(\'New unoptimized energy:    \' + \'%10.8f\'%E1 + \' eV\\n\')\n\n# Re-optimize the structure\nmask = [atom.tag==117 for atom in atoms]\natoms.set_constraint(FixAtoms(mask=mask))\n\n\ndyn = QuasiNewton(atoms,logfile=\'qn.log\',trajectory=\'qn.traj\')\ndyn.run(fmax=0.05)\n\nE2 = atoms.get_potential_energy()\nout.write(\'New optimized energy:      \' + \'%10.8f\'%E2 + \' eV\\n\')\n\n\n\n# Calculate vibrations\nvib = Vibrations(atoms,indices=vibrateatoms)\nvib.run()\nvib.summary(method=\'standard\')\n\n# Make trajectory files to visualize the modes.\nfor mode in range(len(vibrateatoms)*3):\n    vib.write_mode(mode)\n\n\n'
p21
sS'author'
p22
S'AAP'
p23
s.